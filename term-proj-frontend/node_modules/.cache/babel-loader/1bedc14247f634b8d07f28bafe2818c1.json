{"ast":null,"code":"var _jsxFileName = \"/Users/masonzhang/cs/cs32/term-proj-frontend/src/Restriction.js\";\nimport React from 'react';\nimport { getRestrictions, getAutoFill1, getAutoFill2 } from './Window';\nimport Menu from \"./Menu\";\nimport './Decoration.css';\n\nclass Restriction extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.list = array => {\n      return array.map(item => /*#__PURE__*/React.createElement(\"li\", {\n        className: \"noSelect2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.myButtonHandler(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      }, \" X \"), item));\n    };\n\n    this.listSuggest = array => {\n      return array.map(item => /*#__PURE__*/React.createElement(\"li\", {\n        onClick: () => this.mySelectHandler(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, item));\n    };\n\n    this.state = {\n      restrictions: null,\n      itemToAdd: '',\n      loading: true,\n      suggestion: null,\n      test: true\n    };\n    this.mySelectHandler = this.mySelectHandler.bind(this);\n    this.myButtonHandler = this.myButtonHandler.bind(this);\n    this.myChangeHandler = this.myChangeHandler.bind(this);\n  }\n\n  async componentDidMount() {\n    //CALL Backend.getRestriction()\n    this.setState({\n      loading: false,\n      restrictions: getRestrictions(),\n      suggestion: []\n    });\n  }\n\n  async mySelectHandler(item) {\n    //CALL Backend.addToRestriction(item)\n    alert(\"Added \" + item + \"to list of restrictions\"); //CALL Backend.getRestriction()\n  }\n\n  async myChangeHandler(event) {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({\n      [nam]: val\n    }); //CALL Backend.getAutocorrect(val) and setState(suggestion:)\n    //delete later\n\n    if (this.state.test) {\n      this.setState({\n        suggestion: getAutoFill1(),\n        test: false\n      });\n    } else {\n      this.setState({\n        suggestion: getAutoFill2(),\n        test: true\n      });\n    }\n  }\n\n  async myButtonHandler(item) {\n    //CALL Backend.removeFromRestriction(item)\n    alert(\"removed \" + item + \" from restrictions\"); //CALL Backend.getRestriction() and setState()\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \" Restrictions \"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, \"Add to list of restrictions:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"itemToAdd\",\n      onChange: this.myChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    })), this.state.loading ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 34\n      }\n    }, \"loading...\") : !this.state.suggestion ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 81\n      }\n    }, \"loading failed\") : this.listSuggest(this.state.suggestion), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, \"Your current list of restrictions:\"), this.state.loading ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 34\n      }\n    }, \"loading...\") : !this.state.restrictions ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 83\n      }\n    }, \"loading failed\") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, this.list(this.state.restrictions)));\n  }\n\n}\n\nexport default Restriction;","map":{"version":3,"sources":["/Users/masonzhang/cs/cs32/term-proj-frontend/src/Restriction.js"],"names":["React","getRestrictions","getAutoFill1","getAutoFill2","Menu","Restriction","Component","constructor","props","list","array","map","item","myButtonHandler","listSuggest","mySelectHandler","state","restrictions","itemToAdd","loading","suggestion","test","bind","myChangeHandler","componentDidMount","setState","alert","event","nam","target","name","val","value","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { getRestrictions, getAutoFill1, getAutoFill2 } from './Window';\nimport Menu from \"./Menu\";\nimport './Decoration.css';\n\n\nclass Restriction extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          restrictions: null,\n          itemToAdd: '',\n          loading: true,\n          suggestion: null,\n          test: true\n        };\n        this.mySelectHandler = this.mySelectHandler.bind(this);\n        this.myButtonHandler = this.myButtonHandler.bind(this);\n        this.myChangeHandler = this.myChangeHandler.bind(this);\n\n      }\n\n      async componentDidMount(){\n       \n        //CALL Backend.getRestriction()\n        this.setState({loading:false, restrictions:getRestrictions(), suggestion:[]});\n      }\n\n      async mySelectHandler (item) {\n\n       //CALL Backend.addToRestriction(item)\n        alert(\"Added \" + item + \"to list of restrictions\");\n        //CALL Backend.getRestriction()\n      }\n\n      async myChangeHandler(event) {\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({[nam]: val});\n\n\n        //CALL Backend.getAutocorrect(val) and setState(suggestion:)\n\n        //delete later\n        if (this.state.test){\n          this.setState({suggestion: getAutoFill1(), test:false});\n        } else{\n          this.setState({suggestion: getAutoFill2(), test:true});\n\n        }\n\n      }\n\n      async myButtonHandler(item) {\n\n        //CALL Backend.removeFromRestriction(item)\n        alert(\"removed \"+item+\" from restrictions\" );\n        //CALL Backend.getRestriction() and setState()\n\n\n     }\n\n      list = (array) =>{\n          return array.map(item=>(\n              <li className = {\"noSelect2\"}>\n              <button onClick={() => this.myButtonHandler(item)}> X </button>\n              {item}\n              </li> \n          ));\n      }\n\n      listSuggest = (array) =>{\n        return array.map(item=>(\n            <li onClick={() => this.mySelectHandler(item)}>{item} \n            \n            </li> \n        ));\n    }\n\n      render() {\n        return (\n        <div>\n                <Menu/>\n\n          <h1> Restrictions </h1>\n\n          <form >\n          <p>Add to list of restrictions:</p>\n          <input\n            type='text'\n            name='itemToAdd'\n            onChange={this.myChangeHandler}\n          />\n          </form>\n          {this.state.loading ? (<p>loading...</p>):( !this.state.suggestion ? (<p>loading failed</p>) : (this.listSuggest(this.state.suggestion)))}\n\n\n          <p>Your current list of restrictions:</p>\n          {this.state.loading ? (<p>loading...</p>):( !this.state.restrictions ? (<p>loading failed</p>) : (\n            <div className = {\"list2\"}>\n\n            {this.list(this.state.restrictions)}\n            </div>\n            ))}\n\n          </div>\n\n                  \n\n        );\n      }\n    }\n\n  export default Restriction;"]},"metadata":{},"sourceType":"module"}