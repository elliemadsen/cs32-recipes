{"ast":null,"code":"var _jsxFileName = \"/Users/yuna.hiraide/Desktop/term-project-emadsen-mokura-mzhan104-yhiraide-1/term-proj-frontend/src/Pantry.js\";\nimport React from 'react';\nimport { getRestrictions, getAutoFill1, getAutoFill2, getPantry } from './Window';\nimport Menu from \"./Menu\";\nimport './Decoration.css';\nimport $ from \"jquery\";\n\nclass Pantry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.list = array => {\n      return array.map(item => /*#__PURE__*/React.createElement(\"li\", {\n        className: \"noSelect2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.myButtonHandler(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }\n      }, \" X \"), item));\n    };\n\n    this.listSuggest = array => {\n      return array.map(item => /*#__PURE__*/React.createElement(\"li\", {\n        onClick: () => this.mySelectHandler(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, item));\n    };\n\n    this.state = {\n      pantry: null,\n      itemToAdd: '',\n      loading: true,\n      suggestion: null,\n      test: true\n    };\n    this.mySelectHandler = this.mySelectHandler.bind(this);\n    this.myButtonHandler = this.myButtonHandler.bind(this);\n    this.myChangeHandler = this.myChangeHandler.bind(this);\n  }\n\n  async componentDidMount() {\n    const API_URL = \"http://localhost:4567/b/getPantry\";\n    const params = {\n      \"none\": null\n    };\n    await $.post(API_URL, params, response => {\n      console.log(response.pantry);\n      this.setState({\n        pantry: response.pantry\n      });\n    });\n    this.setState({\n      loading: false,\n      suggestion: []\n    });\n  }\n\n  async mySelectHandler(item) {\n    const API_URL = \"http://localhost:4567/b/addPantry\";\n    const params = {\n      \"item\": item\n    };\n    await $.post(API_URL, params, response => {\n      console.log(response.pantry);\n      this.setState({\n        pantry: response.pantry\n      });\n    });\n  }\n\n  async myChangeHandler(event) {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({\n      [nam]: val\n    });\n    console.log(val);\n    console.log(name); //CALL Backend.getAutocorrect(val) and setState(suggestion:)\n    // const API_URL = \"http://localhost:4567/b/autocorrect\";\n    // const params = {\"word\": item}\n    // await $.post(API_URL, params,response =>{\n    //   console.log(response.pantry);\n    //   this.setState({pantry:response.pantry});\n    // })\n    //delete later\n\n    if (this.state.test) {\n      this.setState({\n        suggestion: getAutoFill1(),\n        test: false\n      });\n    } else {\n      this.setState({\n        suggestion: getAutoFill2(),\n        test: true\n      });\n    }\n  }\n\n  async myButtonHandler(item) {\n    //CALL Backend.removeFromPantry(item)\n    alert(\"removed \" + item + \" from pantry\"); //CALL Bckend.getPantry and setState()\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \" Pantry \"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, \"Add to yourPantry:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"itemToAdd\",\n      onChange: this.myChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    })), this.state.loading ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 34\n      }\n    }, \"loading...\") : !this.state.suggestion ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 81\n      }\n    }, \"loading failed\") : this.listSuggest(this.state.suggestion), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, \"Your current Pantry:\"), this.state.loading ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 34\n      }\n    }, \"loading...\") : !this.state.pantry ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 77\n      }\n    }, \"loading failed\") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, this.list(this.state.pantry)));\n  }\n\n}\n\nexport default Pantry;","map":{"version":3,"sources":["/Users/yuna.hiraide/Desktop/term-project-emadsen-mokura-mzhan104-yhiraide-1/term-proj-frontend/src/Pantry.js"],"names":["React","getRestrictions","getAutoFill1","getAutoFill2","getPantry","Menu","$","Pantry","Component","constructor","props","list","array","map","item","myButtonHandler","listSuggest","mySelectHandler","state","pantry","itemToAdd","loading","suggestion","test","bind","myChangeHandler","componentDidMount","API_URL","params","post","response","console","log","setState","event","nam","target","name","val","value","alert","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { getRestrictions, getAutoFill1, getAutoFill2, getPantry } from './Window';\nimport Menu from \"./Menu\";\nimport './Decoration.css';\nimport $ from \"jquery\";\n\n\nclass Pantry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          pantry: null,\n          itemToAdd: '',\n          loading: true,\n          suggestion: null,\n          test: true\n        };\n        this.mySelectHandler = this.mySelectHandler.bind(this);\n        this.myButtonHandler = this.myButtonHandler.bind(this);\n        this.myChangeHandler = this.myChangeHandler.bind(this);\n\n      }\n\n      async componentDidMount(){\n        const API_URL = \"http://localhost:4567/b/getPantry\";\n        const params = {\"none\": null}\n\n        await $.post(API_URL, params,response =>{\n          console.log(response.pantry);\n          this.setState({pantry:response.pantry});\n        })\n        this.setState({loading:false, suggestion:[]});\n      }\n\n      async mySelectHandler (item) {\n\n        const API_URL = \"http://localhost:4567/b/addPantry\";\n        const params = {\"item\": item}\n\n        await $.post(API_URL, params,response =>{\n          console.log(response.pantry);\n          this.setState({pantry:response.pantry});\n        })\n        \n      }\n\n      async myChangeHandler(event) {\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({[nam]: val});\n        console.log(val);\n        console.log(name);\n\n\n        //CALL Backend.getAutocorrect(val) and setState(suggestion:)\n        // const API_URL = \"http://localhost:4567/b/autocorrect\";\n        // const params = {\"word\": item}\n\n        // await $.post(API_URL, params,response =>{\n        //   console.log(response.pantry);\n        //   this.setState({pantry:response.pantry});\n        // })\n\n\n        //delete later\n        if (this.state.test){\n          this.setState({suggestion: getAutoFill1(), test:false});\n        } else{\n          this.setState({suggestion: getAutoFill2(), test:true});\n\n        }\n\n      }\n\n      async myButtonHandler(item) {\n        //CALL Backend.removeFromPantry(item)\n        alert(\"removed \"+item+\" from pantry\" );\n        //CALL Bckend.getPantry and setState()\n  \n     }\n\n      list = (array) =>{\n          return array.map(item=>(\n              <li className = {\"noSelect2\"}>\n              <button onClick={() => this.myButtonHandler(item)}> X </button>\n              {item}\n              </li> \n          ));\n      }\n\n      listSuggest = (array) =>{\n        return array.map(item=>(\n            <li onClick={() => this.mySelectHandler(item)}>{item} \n            \n            </li> \n        ));\n    }\n\n      render() {\n        return (\n        <div>\n                <Menu/>\n\n          <h1> Pantry </h1>\n\n          <form >\n          <p>Add to yourPantry:</p>\n          <input\n            type='text'\n            name='itemToAdd'\n            onChange={this.myChangeHandler}\n          />\n          </form>\n          {this.state.loading ? (<p>loading...</p>):( !this.state.suggestion ? (<p>loading failed</p>) : (this.listSuggest(this.state.suggestion)))}\n\n\n          <p>Your current Pantry:</p>\n          {this.state.loading ? (<p>loading...</p>):( !this.state.pantry ? (<p>loading failed</p>) : (\n            <div className = {\"list2\"}>\n\n            {this.list(this.state.pantry)}\n            </div>\n            ))}\n\n          </div>\n\n                  \n\n        );\n      }\n    }\n\n  export default Pantry;"]},"metadata":{},"sourceType":"module"}