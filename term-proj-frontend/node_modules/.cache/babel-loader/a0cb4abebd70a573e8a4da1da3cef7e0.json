{"ast":null,"code":"var _jsxFileName = \"/Users/yuna.hiraide/Desktop/my-app/src/Login.js\";\nimport React from 'react';\nimport Rootstore from './Rootstore';\nimport { connect } from 'react-redux';\nimport addToCart from './cartAction';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.mySubmitHandler = event => {\n      event.preventDefault();\n      alert(\"You are submitting \" + this.state.username + this.state.password);\n      this.props.addToCart(this.state.username);\n      console.log(this.props.store.Instance().getUser());\n      this.props.store.Instance().setUser(this.state.username);\n      console.log(this.props.store.Instance().getUser()); // window.location.href=\"/search\";\n    };\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.myButtonHandler = () => {\n      alert(\"Signup page\");\n      alert(this.props.store.getUser());\n      window.location.href = \"/signup\";\n    };\n\n    this.state = {\n      username: '',\n      password: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.mySubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, \" Login \", this.props.usernameTest), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \"Username:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      onChange: this.myChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"password\",\n      onChange: this.myChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"New to Reverse Recipe?:\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.myButtonHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"Click here!\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    usernameTest: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: id => {\n      dispatch(addToCart(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/yuna.hiraide/Desktop/my-app/src/Login.js"],"names":["React","Rootstore","connect","addToCart","Login","Component","constructor","props","mySubmitHandler","event","preventDefault","alert","state","username","password","console","log","store","Instance","getUser","setUser","myChangeHandler","nam","target","name","val","value","setState","myButtonHandler","window","location","href","render","usernameTest","mapStateToProps","user","mapDispatchToProps","dispatch","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Rootstore from './Rootstore';\nimport { connect } from 'react-redux';\nimport addToCart  from './cartAction'\n\n\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          username: '',\n          password: null,\n        };\n      }\n\n      mySubmitHandler = (event) => {\n          \n        event.preventDefault();\n        alert(\"You are submitting \" + this.state.username + this.state.password);\n        this.props.addToCart(this.state.username);\n\n\n\n        console.log(this.props.store.Instance().getUser());\n\n        this.props.store.Instance().setUser(this.state.username);\n        console.log(this.props.store.Instance().getUser());\n        // window.location.href=\"/search\";\n\n      }\n\n      myChangeHandler = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({[nam]: val});\n      }\n\n     myButtonHandler = () => {\n        alert (\"Signup page\");\n        alert(this.props.store.getUser());\n        window.location.href=\"/signup\";\n\n     }\n\n      render() {\n        return (\n        <div>\n          <form onSubmit={this.mySubmitHandler}>\n      <h1> Login {this.props.usernameTest}</h1>\n          <p>Username:</p>\n          <input\n            type='text'\n            name='username'\n            onChange={this.myChangeHandler}\n          />\n          <p>Password:</p>\n          <input\n            type='text'\n            name='password'\n            onChange={this.myChangeHandler}\n          />\n          <input\n            type='submit'\n          />\n          </form>\n          <p>New to Reverse Recipe?:</p>\n        <button onClick={this.myButtonHandler}>Click here!</button>\n          </div>\n\n                  \n\n        );\n      }\n    }\n    \n\n    const mapStateToProps = (state)=>{\n      return {\n        usernameTest: state.user\n      }\n    }\n\n\n    const mapDispatchToProps= (dispatch)=>{\n      return{\n         addToCart: (id)=>{dispatch(addToCart(id))}\n           }\n      }\n\n  export default connect(mapStateToProps, mapDispatchToProps) (Login);"]},"metadata":{},"sourceType":"module"}